receivers:
  otlp:
    protocols:
      grpc:
        endpoint: 0.0.0.0:4317
      http:
        endpoint: 0.0.0.0:4318

  prometheus/collector:
    config:
      scrape_configs:
        - job_name: "opentelemetry-collector"
          scrape_interval: 1s
          static_configs:
            - targets: ["localhost:8888"]

processors:
  batch:
    send_batch_size: 1000
    timeout: 10s
  memory_limiter:
    check_interval: 1s
    limit_percentage: 80
    spike_limit_percentage: 25
  resourcedetection:
    detectors: [env, system]
    timeout: 5s

exporters:
  debug:
  # Prometheus exporter for metrics
  otlphttp/metrics:
    endpoint: http://prometheus:9090/api/v1/otlp
    tls:
      insecure: true

  # Tempo exporter for traces
  otlp/traces:
    endpoint: tempo:4317
    tls:
      insecure: true

  # Loki exporter for logs
  otlphttp/logs:
    endpoint: http://loki:3100/otlp
    tls:
      insecure: true

extensions:
  health_check:
    endpoint: 0.0.0.0:13133
  pprof:
    endpoint: 0.0.0.0:1777
  zpages:
    endpoint: 0.0.0.0:55679

service:
  extensions: [health_check, pprof, zpages]
  pipelines:
    traces:
      receivers: [otlp]
      processors: [memory_limiter, batch, resourcedetection]
      exporters: [debug, otlp/traces]
    metrics:
      receivers: [otlp, prometheus/collector]
      processors: [memory_limiter, batch, resourcedetection]
      exporters: [debug, otlphttp/metrics]
    logs:
      receivers: [otlp]
      processors: [memory_limiter, batch, resourcedetection]
      exporters: [debug, otlphttp/logs]
